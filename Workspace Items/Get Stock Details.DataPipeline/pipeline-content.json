{
  "properties": {
    "activities": [
      {
        "type": "ForEach",
        "typeProperties": {
          "items": {
            "value": "@activity('Get_Ticker_List').output.value",
            "type": "Expression"
          },
          "activities": [
            {
              "type": "TridentNotebook",
              "typeProperties": {
                "notebookId": "68791e49-9688-b96e-4dfc-81baacb7ab6b",
                "workspaceId": "00000000-0000-0000-0000-000000000000",
                "parameters": {
                  "pipelineRunId": {
                    "value": {
                      "value": "@pipeline().RunId",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "api": {
                    "value": {
                      "value": "@activity('Start Transfer').output.firstRow.Api",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "stockmarket": {
                    "value": {
                      "value": "@activity('Start Transfer').output.firstRow.Stockmarket",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "stock": {
                    "value": {
                      "value": "@activity('Start Transfer').output.firstRow.SourceObjectName",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "startDate": {
                    "value": {
                      "value": "@activity('Start Transfer').output.firstRow.LowWatermarkDateEH",
                      "type": "Expression"
                    },
                    "type": "string"
                  },
                  "endDate": {
                    "value": {
                      "value": "@activity('Start Transfer').output.firstRow.NewLowWatermarkDateEH",
                      "type": "Expression"
                    },
                    "type": "string"
                  }
                }
              },
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureInput": false,
                "secureOutput": false
              },
              "name": "Get Stock Details",
              "dependsOn": [
                {
                  "activity": "Start Transfer",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ]
            },
            {
              "type": "Lookup",
              "typeProperties": {
                "source": {
                  "type": "AzureSqlSource",
                  "sqlReaderStoredProcedureName": "[Core].[StartTransfer]",
                  "storedProcedureParameters": {
                    "HighWatermark": {
                      "type": "DateTime",
                      "value": {
                        "value": "@item().HighWaterMark",
                        "type": "Expression"
                      }
                    },
                    "PipelineRunId": {
                      "type": "String",
                      "value": {
                        "value": "@pipeline().RunId",
                        "type": "Expression"
                      }
                    },
                    "SourceObjectName": {
                      "type": "String",
                      "value": {
                        "value": "@item().SourceObjectName",
                        "type": "Expression"
                      }
                    }
                  },
                  "partitionOption": "None",
                  "queryTimeout": "02:00:00"
                },
                "datasetSettings": {
                  "type": "AzureSqlTable",
                  "typeProperties": {
                    "database": "StockMetaData"
                  },
                  "schema": [],
                  "annotations": []
                }
              },
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureInput": false,
                "secureOutput": false
              },
              "name": "Start Transfer",
              "dependsOn": []
            },
            {
              "type": "Lookup",
              "typeProperties": {
                "source": {
                  "type": "AzureSqlSource",
                  "sqlReaderStoredProcedureName": "[Core].[EHDatabaseLoaded]",
                  "storedProcedureParameters": {
                    "RowsInsertedKQL": {
                      "type": "Int32",
                      "value": {
                        "value": "@activity('Get Stock Details').output.result.exitValue",
                        "type": "Expression"
                      }
                    },
                    "SourceObjectName": {
                      "type": "String",
                      "value": {
                        "value": "@item().SourceObjectName",
                        "type": "Expression"
                      }
                    },
                    "StartTime": {
                      "type": "DateTime",
                      "value": {
                        "value": "@activity('Start Transfer').output.firstRow.StartTime",
                        "type": "Expression"
                      }
                    }
                  },
                  "partitionOption": "None",
                  "queryTimeout": "02:00:00"
                },
                "datasetSettings": {
                  "type": "AzureSqlTable",
                  "typeProperties": {
                    "database": "StockMetaData"
                  },
                  "schema": [],
                  "annotations": []
                }
              },
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureInput": false,
                "secureOutput": false
              },
              "name": "EHDatabaseLoaded",
              "dependsOn": [
                {
                  "activity": "Get Stock Details",
                  "dependencyConditions": [
                    "Succeeded"
                  ]
                }
              ]
            },
            {
              "type": "Lookup",
              "typeProperties": {
                "source": {
                  "type": "AzureSqlSource",
                  "sqlReaderStoredProcedureName": "[Core].[ErrorInTransfer]",
                  "storedProcedureParameters": {
                    "ErrorMessage": {
                      "type": "String",
                      "value": {
                        "value": "@activity('Get Stock Details').output.result.error.evalue",
                        "type": "Expression"
                      }
                    },
                    "SourceObjectName": {
                      "type": "String",
                      "value": {
                        "value": "@item().SourceObjectName",
                        "type": "Expression"
                      }
                    },
                    "SparkMonitoringURL": {
                      "type": "String",
                      "value": {
                        "value": "@activity('Get Stock Details').output.SparkMonitoringURL",
                        "type": "Expression"
                      }
                    },
                    "StartTime": {
                      "type": "DateTime",
                      "value": {
                        "value": "@activity('Start Transfer').output.firstRow.StartTime",
                        "type": "Expression"
                      }
                    }
                  },
                  "partitionOption": "None",
                  "queryTimeout": "02:00:00"
                },
                "datasetSettings": {
                  "type": "AzureSqlTable",
                  "typeProperties": {
                    "database": "StockMetaData"
                  },
                  "schema": [],
                  "annotations": []
                }
              },
              "policy": {
                "timeout": "0.12:00:00",
                "retry": 0,
                "retryIntervalInSeconds": 30,
                "secureInput": false,
                "secureOutput": false
              },
              "name": "ErrorInTransfer",
              "dependsOn": [
                {
                  "activity": "Get Stock Details",
                  "dependencyConditions": [
                    "Failed"
                  ]
                }
              ]
            }
          ]
        },
        "name": "ForEach1",
        "dependsOn": [
          {
            "activity": "Get_Ticker_List",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      },
      {
        "type": "Lookup",
        "typeProperties": {
          "source": {
            "type": "AzureSqlSource",
            "sqlReaderStoredProcedureName": "[Core].[GetLoadObjects]",
            "partitionOption": "None",
            "queryTimeout": "02:00:00"
          },
          "datasetSettings": {
            "type": "AzureSqlTable",
            "typeProperties": {
              "database": "StockMetaData"
            },
            "schema": [],
            "annotations": []
          },
          "firstRowOnly": false
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Get_Ticker_List",
        "description": "Get all tickers incl. Watermark",
        "dependsOn": []
      },
      {
        "type": "PBISemanticModelRefresh",
        "typeProperties": {
          "method": "post",
          "commitMode": "Transactional",
          "maxParallelism": 6,
          "objects": [],
          "waitOnCompletion": true,
          "operationType": "SemanticModelRefresh"
        },
        "policy": {
          "timeout": "0.12:00:00",
          "retry": 0,
          "retryIntervalInSeconds": 30,
          "secureInput": false,
          "secureOutput": false
        },
        "name": "Refresh Use Case Semantic Model",
        "dependsOn": [
          {
            "activity": "ForEach1",
            "dependencyConditions": [
              "Succeeded"
            ]
          }
        ]
      }
    ]
  }
}